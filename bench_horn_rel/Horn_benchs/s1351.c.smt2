(declare-rel loop ((Array Int Int) Int (Array Int Int) Int (Array Int Int) Int Int Int ))
(declare-rel exit ())
(declare-var i Int )
(declare-var i1 Int )
(declare-var a_ind Int )
(declare-var b_ind Int )
(declare-var c_ind Int )
(declare-var a_ind1 Int )
(declare-var b_ind1 Int )
(declare-var c_ind1 Int )
(declare-var index_limit Int )
(declare-var a_i Int )
(declare-var b_i Int )
(declare-var c_i Int )
(declare-var count Int )
(declare-var a_array (Array Int Int) )
(declare-var a_array1 (Array Int Int) )
(declare-var b_array (Array Int Int) )
(declare-var c_array (Array Int Int) )

(rule (=> 
	(and 
		(= i 0)
	)
	(loop a_array a_ind b_array b_ind c_array c_ind i count)
))
(rule (=> 
	(and 
		(loop a_array a_ind b_array b_ind c_array c_ind i count)
		(= index_limit (* count 8))
		(< i index_limit)
		(= b_i (select b_array b_ind))
		(= c_i (select c_array c_ind))
		(= a_i (+ b_i c_i))
		(= a_array1 (store a_array a_ind a_i))
		(= i1 (+ i 1))
		(= a_ind1 (+ a_ind (* 1 4)))
		(= b_ind1 (+ b_ind (* 1 4)))
		(= c_ind1 (+ c_ind (* 1 4)))
	)
	(loop a_array1 a_ind1 b_array b_ind1 c_array c_ind1 i1 count)
))
(rule (=> 
	(and 
		(loop a_array a_ind b_array b_ind c_array c_ind i count)
		(= index_limit (* count 8))
		(not (< i index_limit))
		;(<= 0 i1)
		;(< i1 index_limit)
		;(not (< (select b_array i1) (select a_array i1)))
	)
	exit
))
(query exit)